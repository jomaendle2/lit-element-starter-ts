{"version":3,"file":"ptc-select-filters.js","sourceRoot":"","sources":["src/ptc-select-filters.ts"],"names":[],"mappings":"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","sourcesContent":["import {customElement, property, query} from 'lit/decorators.js';\nimport {css, html, LitElement} from 'lit';\nimport {\n  Department,\n  EntityValue,\n  Filter,\n  Filters,\n  Position,\n  Venue,\n} from './models/departments.model';\nimport {fetchWrapper} from './service/api';\nimport {Entity} from './models/entity.model';\n\n@customElement('ptc-select-filters')\nexport class PtcSelectFilters extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      font-family: sans-serif;\n    }\n\n    span.filter {\n      border: solid 1px gray;\n      border-radius: 5px;\n      padding: 0.25rem 0.5rem;\n    }\n\n    button {\n      background-color: #004ea1;\n      border: none;\n      color: white;\n      padding: 0.5rem 1rem;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n\n    .filter-item {\n      padding: 0.25rem 0.5rem;\n      background-color: #fbd5d5;\n      border-radius: 0.5rem;\n      cursor: pointer;\n    }\n\n    .filter-item:hover {\n      background-color: #f9acac;\n    }\n\n    .filter-item-wrapper {\n      display: flex;\n      gap: 1rem;\n      flex-wrap: wrap;\n    }\n\n    #filter-selection-popover {\n      margin-inline: 2rem;\n      border-radius: 10px;\n      padding: 1rem;\n    }\n\n    #filter-selection-popover > section {\n      margin-bottom: 1rem;\n    }\n\n    #filter-selection-popover > section > label {\n      font-size: 1.2rem;\n      font-weight: bold;\n    }\n  `;\n\n  constructor() {\n    super();\n\n    fetchWrapper('venue').then((venues) => {\n      this.venues = venues.data;\n      console.log('xx',this.venues);\n\n      for (const venue of this.venues) {\n        for (const department of venue.departments) {\n          for (const position of department.positions) {\n            if (this.positions.find((p) => p.id === position.id)) {\n              continue;\n            }\n            this.positions.push(position);\n          }\n\n          if (this.departments.find((d) => d.id === department.id)) {\n            continue;\n          }\n          this.departments.push(department);\n        }\n      }\n    });\n  }\n\n  @property({type: Array})\n  venues: Venue[] = [];\n\n  @property({type: Array})\n  departments: Department[] = [];\n\n  @property({type: Array})\n  positions: Position[] = [];\n\n  @property({type: Array})\n  selectedEntities: Filters = [];\n\n  @query('#filter-selection-popover')\n  filterSelectionPopover!: HTMLElement;\n\n  addFilter(entity: Filter) {\n    if (this.selectedEntities.find((e) => e.value === entity.value)) {\n      return;\n    }\n\n    this.selectedEntities = [...this.selectedEntities, entity];\n\n    this.filterSelectionPopover.hidePopover();\n  }\n\n  @property({type: Array})\n  get filterSections(): {\n    label: string;\n    type: Entity;\n    data: EntityValue[];\n  }[] {\n    return [\n      {\n        label: 'Venues',\n        data: this.venues,\n        type: 'venue',\n      },\n      {\n        label: 'Departments',\n        data: this.departments,\n        type: 'department',\n      },\n      {\n        label: 'Positions',\n        data: this.positions,\n        type: 'position',\n      },\n    ]\n  }\n\n  override render() {\n    return html`\n      <div>\n        <button popovertarget=\"filter-selection-popover\">Add Filter</button>\n\n        <div class=\"filter-item-wrapper\">\n          ${this.selectedEntities.map(\n            (entity) =>\n              html`\n                <div class=\"filter-item\">${entity.type}: ${entity.value}</div>\n              `\n          )}\n        </div>\n      </div>\n\n      <div id=\"filter-selection-popover\" popover>\n        ${this.filterSections.map(\n          (section) => html`\n            <section>\n              <label>${section.label}</label>\n              <div class=\"filter-item-wrapper\">\n                ${section.data.map(\n                  (v) => html` <div\n                    class=\"filter-item\"\n                    @click=${() =>\n                      this.addFilter({\n                        type: section.type,\n                        value: v.name,\n                      })}\n                  >\n                    ${v.name}\n                  </div>`\n                )}\n              </div>\n            </section>\n          `\n        )}\n      </div>\n    `;\n  }\n}\n"]}