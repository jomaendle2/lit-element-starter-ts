{"version":3,"file":"ptc-select-filters-old.js","sourceRoot":"","sources":["src/ptc-select-filters-old.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,GAAG,EAAE,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAEjE,OAAO,EAAC,YAAY,EAAC,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAC,aAAa,EAAS,MAAM,uBAAuB,CAAC;AAIrD,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,UAAU;IAyBjD;QACE,KAAK,EAAE,CAAC;QAUV,aAAQ,GAAG,aAAa,CAAC;QAGzB,iBAAY,GAAkB,EAAE,CAAC;QAX/B,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,QAEjC,EAAE,EAAE;YACH,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAA;QAC9B,CAAC,CAAC,CAAA;IACJ,CAAC;IASD,cAAc;QACZ,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,aAAa,IAAI,CAAC,CAAC,CAAC;QAEvE,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAClC,OAAO;QACT,CAAC;QAED,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,QAEhC,EAAE,EAAE;YACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,iBAAiB;QACf,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,aAAa,IAAI,CAAC,CAAC;QAC7D,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,EAAE,aAAa,IAAI,CAAC,CAAC;QAEvE,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC1C,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IAE1D,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;+CAIgC,IAAI,CAAC,cAAc;cACpD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAC7B,IAAI,CAAA,WAAW,MAAM,WAAW,CACjC;;;;cAIC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CACjC,IAAI,CAAA,WAAW,MAAM,CAAC,IAAI,WAAW,CACtC;;;2BAGc,IAAI,CAAC,iBAAiB;;;;;;KAM5C,CAAA;IACH,CAAC;;AAzFe,0BAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;GAgB3B,AAhBqB,CAgBpB;AAGF;IADC,KAAK,CAAC,gBAAgB,CAAC;4DACY;AAGpC;IADC,KAAK,CAAC,sBAAsB,CAAC;iEACW;AAazC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;qDACC;AAGzB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;yDACS;AAvCtB,mBAAmB;IAD/B,aAAa,CAAC,sBAAsB,CAAC;GACzB,mBAAmB,CA2F/B","sourcesContent":["import {css, html, LitElement} from 'lit';\nimport {customElement, property, query} from 'lit/decorators.js';\nimport {EntityValue, Venue} from './models/departments.model';\nimport {fetchWrapper} from './service/api';\nimport {entitiesArray, Entity} from './models/entity.model';\n\n\n@customElement('ptc-select-filters-2')\nexport class PtcSelectFiltersOld extends LitElement {\n  static override styles = css`\n      :host {\n          display: block;\n          font-family: sans-serif;\n      }\n\n      .entity-select-input {\n          display: flex;\n          gap: 1rem;\n      }\n\n      input[type=\"text\"] {\n          border: solid 1px #ccc;\n          padding: 0.5rem;\n          border-radius: 0.25rem;\n      }\n  `;\n\n  @query('#entity-select')\n  entitySelectRef?: HTMLSelectElement;\n\n  @query('#entity-value-select')\n  entityValueSelectRef?: HTMLSelectElement;\n\n  constructor() {\n    super();\n\n    fetchWrapper('venue').then(async (response: {\n      data: Venue[]\n    }) => {\n      const venues = response.data\n    })\n  }\n\n  @property({type: Array})\n  entities = entitiesArray;\n\n  @property({type: Array})\n  entityValues: EntityValue[] = [];\n\n\n  onSelectEntity() {\n    const entity = this.entities[this.entitySelectRef?.selectedIndex || 0];\n\n    if (!entity) {\n      console.error('Entity not found');\n      return;\n    }\n\n    fetchWrapper(entity).then(async (response: {\n      data: EntityValue[]\n    }) => {\n      this.entityValues = response.data;\n    })\n  }\n\n  addEntityToFilter() {\n    const entityIndex = this.entitySelectRef?.selectedIndex || 0;\n    const entityValueIndex = this.entityValueSelectRef?.selectedIndex || 0;\n\n    const entity = this.entities[entityIndex];\n    const entityValue = this.entityValues[entityValueIndex];\n\n  }\n\n  override render() {\n    return html`\n      <fieldset>\n        <legend>Entity</legend>\n        <div class=\"entity-select-input\">\n          <select id=\"entity-select\" @change=${this.onSelectEntity}>\n            ${this.entities.map((entity) =>\n              html`<option>${entity}</option>`\n            )}\n          </select>\n\n          <select id=\"entity-value-select\">\n            ${this.entityValues.map((entity) =>\n              html`<option>${entity.name}</option>`\n            )}\n          </select>\n          \n          <button @click=${this.addEntityToFilter}>\n            Add\n          </button>\n        </div>\n\n      </fieldset>\n    `\n  }\n}"]}